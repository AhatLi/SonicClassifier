{"version":3,"sources":["ui-component/cards/MainCard.js","views/main/Default/index.js"],"names":["headerSX","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","borderColor","palette","primary","action","variant","className","Main","axios","require","useState","type","setType","item","setItem","playlist","setPlaylist","playlists","setPlaylists","order","setOrder","classes","makeStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","paper","padding","textAlign","color","backgroundColor","frame","height","light","area","formstyle","width","useStyles","useEffect","get","then","response","words","data","split","catch","error","container","xs","component","row","name","defaultValue","value","onChange","event","target","control","selected","label","id","labelId","inputProps","disabled","map","i","onClick","alert","style"],"mappings":"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","file":"static/js/9.e328c624.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\r\n\r\nconst MainCard = React.forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass,\r\n            contentSX,\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? (shadow ? shadow : '0 2px 14px 0 rgb(32 40 45 / 8%)') : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import { React, useEffect, useState } from 'react';\r\n\r\nimport MainCard from './../../../ui-component/cards/MainCard';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Select, MenuItem, InputLabel, Button, Grid } from '@material-ui/core';\r\n\r\nconst Main = () => {\r\n  const axios = require('axios');\r\n\r\n  const [type, setType] = useState('playlist');\r\n  const [item, setItem] = useState('path');\r\n  const [playlist, setPlaylist] = useState(\"Select Playlist\");\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [order, setOrder] = useState(\"asc\");\r\n  \r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n  const handleChangePlaylist = (event) => {\r\n    setPlaylist(event.target.value);\r\n  };\r\n  const handleChangeSortItem = (event) => {\r\n    setItem(event.target.value);\r\n  };\r\n  const handleChangeOrder = (event) => {\r\n    setOrder(event.target.value);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: 'blue',\r\n      backgroundColor: 'red'\r\n    },\r\n    frame: {\r\n        height: 'calc(100vh - 210px)',\r\n        border: '1px solid',\r\n        borderColor: theme.palette.primary.light\r\n    },\r\n    area: {\r\n        height: 'calc(80vh - 210px)',\r\n        borderColor: theme.palette.primary.light\r\n    },\r\n    formstyle: {\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n    \r\n  const loadingPlaylist = () => {\r\n    axios.get(`/getPlaylist`).then(\r\n      (response) => {        \r\n        const words = response.data.split('|');\r\n        setPlaylists(words);\r\n      }\r\n    ).catch(error => {\r\n        throw(error);\r\n    })\r\n  };\r\n  useEffect(() => {\r\n    loadingPlaylist();\r\n  }, []);\r\n\r\n  const onClickSortSong = () => { \r\n    if({type}.type === \"star\") {\r\n      axios.get(`/sortStar?item=${item}&order=${order}`).then(\r\n        (response) => {        \r\n          alert(response.data);\r\n        }\r\n      ).catch(error => {\r\n        alert(error);\r\n      });\r\n    }\r\n    else {\r\n      axios.get(`/sortPlaylist?playlist=${playlist}&item=${item}&order=${order}`).then(\r\n        (response) => {        \r\n          alert(response.data);\r\n        }\r\n      ).catch(error => {\r\n        alert(error);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <MainCard  className={classes.frame} title=\"Sort Your Music\">\r\n    <Grid container spacing={3} className={classes.area}>\r\n      <Grid item xs={12}>\r\n      <FormControl>\r\n      <FormLabel component=\"legend\">Type</FormLabel>\r\n      <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" value={type} onChange={handleChangeType}>\r\n        <FormControlLabel value=\"playlist\" control={<Radio selected/>} label=\"Playlist\" />\r\n        <FormControlLabel value=\"star\" control={<Radio />} label=\"Star\" />\r\n      </RadioGroup>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <InputLabel id=\"demo-simple-select-helper-label1\">Playlist</InputLabel>\r\n      <FormControl className={classes.formstyle}>\r\n        <Select\r\n        id=\"demo-simple-select1\"\r\n        labelId=\"demo-simple-select-helper-label1\"\r\n        value={playlist}\r\n        onChange={handleChangePlaylist}\r\n        inputProps={{ 'aria-label': 'Without label' }}\r\n        >\r\n        <MenuItem value=\"Select Playlist\" disabled>Select Playlist</MenuItem>\r\n        {playlists.map((item, i) => (\r\n          <MenuItem key={i} value={item}>\r\n            {item}\r\n          </MenuItem>\r\n        ))}\r\n        </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <InputLabel id=\"demo-simple-select-helper-label2\">Sort Item</InputLabel>\r\n      <FormControl className={classes.formstyle}>\r\n          <Select\r\n          id=\"demo-simple-select2\"\r\n          labelId=\"demo-simple-select-helper-label2\"\r\n          value={item}\r\n          onChange={handleChangeSortItem}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n          >\r\n          <MenuItem value='path'>Path</MenuItem>\r\n          <MenuItem value='title'>Title</MenuItem>\r\n          <MenuItem value='album'>Album</MenuItem>\r\n          <MenuItem value='artist'>Artist</MenuItem>\r\n          <MenuItem value='year'>Year</MenuItem>\r\n          </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <FormControl>\r\n          <FormLabel component=\"legend\">Order</FormLabel>\r\n          <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" value={order} onChange={handleChangeOrder}>\r\n              <FormControlLabel value=\"asc\" control={<Radio selected/>} label=\"Asc\" />\r\n              <FormControlLabel value=\"desc\" control={<Radio />} label=\"Desc\" />\r\n          </RadioGroup>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <Button variant=\"contained\" className={classes.formstyle} onClick={onClickSortSong}>Sort Start!</Button> \r\n      </Grid>\r\n    </Grid>\r\n    <hr></hr>\r\n    <p style={{textAlign: 'right'}}>\r\n    v0.9.1\r\n    </p>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}