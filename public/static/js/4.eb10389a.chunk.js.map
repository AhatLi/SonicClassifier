{"version":3,"sources":["ui-component/cards/MainCard.js","views/main/Default/index.js"],"names":["headerSX","mr","MainCard","React","forwardRef","ref","border","boxShadow","children","content","contentClass","contentSX","darkTitle","secondary","shadow","sx","title","others","theme","useTheme","Card","borderColor","palette","primary","CardHeader","action","Typography","variant","Divider","CardContent","className","Main","axios","require","useState","type","setType","item","setItem","playlist","setPlaylist","playlists","setPlaylists","order","setOrder","classes","makeStyles","formControl","margin","spacing","minWidth","selectEmpty","marginTop","paper","padding","textAlign","color","backgroundColor","frame","height","light","area","formstyle","width","useStyles","useEffect","get","then","response","words","data","split","catch","error","Grid","container","xs","FormControl","FormLabel","component","RadioGroup","row","name","defaultValue","value","onChange","event","target","FormControlLabel","control","Radio","selected","label","InputLabel","id","Select","labelId","inputProps","MenuItem","disabled","map","i","Button","onClick","alert","style"],"mappings":"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","file":"static/js/4.eb10389a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\n\r\n// material-ui\r\nimport { useTheme } from '@material-ui/styles';\r\nimport { Card, CardContent, CardHeader, Divider, Typography } from '@material-ui/core';\r\n\r\n// constant\r\nconst headerSX = {\r\n    '& .MuiCardHeader-action': { mr: 0 }\r\n};\r\n\r\n//-----------------------|| CUSTOM MAIN CARD ||-----------------------//\r\n\r\nconst MainCard = React.forwardRef(\r\n    (\r\n        {\r\n            border = true,\r\n            boxShadow,\r\n            children,\r\n            content = true,\r\n            contentClass,\r\n            contentSX,\r\n            darkTitle,\r\n            secondary,\r\n            shadow,\r\n            sx = {},\r\n            title,\r\n            ...others\r\n        },\r\n        ref\r\n    ) => {\r\n        const theme = useTheme();\r\n\r\n        return (\r\n            <Card\r\n                ref={ref}\r\n                {...others}\r\n                sx={{\r\n                    border: border ? '1px solid' : 'none',\r\n                    borderColor: theme.palette.primary[200] + 75,\r\n                    ':hover': {\r\n                        boxShadow: boxShadow ? (shadow ? shadow : '0 2px 14px 0 rgb(32 40 45 / 8%)') : 'inherit'\r\n                    },\r\n                    ...sx\r\n                }}\r\n            >\r\n                {/* card header and action */}\r\n                {!darkTitle && title && <CardHeader sx={headerSX} title={title} action={secondary} />}\r\n                {darkTitle && title && (\r\n                    <CardHeader sx={headerSX} title={<Typography variant=\"h3\">{title}</Typography>} action={secondary} />\r\n                )}\r\n\r\n                {/* content & header divider */}\r\n                {title && <Divider />}\r\n\r\n                {/* card content */}\r\n                {content && (\r\n                    <CardContent sx={contentSX} className={contentClass}>\r\n                        {children}\r\n                    </CardContent>\r\n                )}\r\n                {!content && children}\r\n            </Card>\r\n        );\r\n    }\r\n);\r\n\r\nMainCard.propTypes = {\r\n    border: PropTypes.bool,\r\n    boxShadow: PropTypes.bool,\r\n    children: PropTypes.node,\r\n    content: PropTypes.bool,\r\n    contentClass: PropTypes.string,\r\n    contentSX: PropTypes.object,\r\n    darkTitle: PropTypes.bool,\r\n    secondary: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object]),\r\n    shadow: PropTypes.string,\r\n    sx: PropTypes.object,\r\n    title: PropTypes.oneOfType([PropTypes.node, PropTypes.string, PropTypes.object])\r\n};\r\n\r\nexport default MainCard;\r\n","import { React, useEffect, useState } from 'react';\r\n\r\nimport MainCard from './../../../ui-component/cards/MainCard';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { FormControl, FormLabel, RadioGroup, FormControlLabel, Radio, Select, MenuItem, InputLabel, Button, Grid } from '@material-ui/core';\r\n\r\nconst Main = () => {\r\n  const axios = require('axios');\r\n\r\n  const [type, setType] = useState('playlist');\r\n  const [item, setItem] = useState('path');\r\n  const [playlist, setPlaylist] = useState(\"Select Playlist\");\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const [order, setOrder] = useState(\"asc\");\r\n  \r\n  const handleChangeType = (event) => {\r\n    setType(event.target.value);\r\n  };\r\n  const handleChangePlaylist = (event) => {\r\n    setPlaylist(event.target.value);\r\n  };\r\n  const handleChangeSortItem = (event) => {\r\n    setItem(event.target.value);\r\n  };\r\n  const handleChangeOrder = (event) => {\r\n    setOrder(event.target.value);\r\n  };\r\n\r\n  const useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n      margin: theme.spacing(1),\r\n      minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: 'blue',\r\n      backgroundColor: 'red'\r\n    },\r\n    frame: {\r\n        height: 'calc(100vh - 210px)',\r\n        border: '1px solid',\r\n        borderColor: theme.palette.primary.light\r\n    },\r\n    area: {\r\n        height: 'calc(80vh - 210px)',\r\n        borderColor: theme.palette.primary.light\r\n    },\r\n    formstyle: {\r\n        textAlign: 'center',\r\n        width: '100%'\r\n    }\r\n  }));\r\n  const classes = useStyles();\r\n    \r\n  const loadingPlaylist = () => {\r\n    axios.get(`/getPlaylist`).then(\r\n      (response) => {        \r\n        const words = response.data.split('|');\r\n        setPlaylists(words);\r\n      }\r\n    ).catch(error => {\r\n        throw(error);\r\n    })\r\n  };\r\n  useEffect(() => {\r\n    loadingPlaylist();\r\n  }, []);\r\n\r\n  const onClickSortSong = () => { \r\n    if({type}.type === \"star\") {\r\n      axios.get(`/sortStar?item=${item}&order=${order}`).then(\r\n        (response) => {        \r\n          alert(response.data);\r\n        }\r\n      ).catch(error => {\r\n        alert(error);\r\n      });\r\n    }\r\n    else {\r\n      axios.get(`/sortPlaylist?playlist=${playlist}&item=${item}&order=${order}`).then(\r\n        (response) => {        \r\n          alert(response.data);\r\n        }\r\n      ).catch(error => {\r\n        alert(error);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <MainCard  className={classes.frame} title=\"Sort Your Music\">\r\n    <Grid container spacing={3} className={classes.area}>\r\n      <Grid item xs={12}>\r\n      <FormControl>\r\n      <FormLabel component=\"legend\">Type</FormLabel>\r\n      <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" value={type} onChange={handleChangeType}>\r\n        <FormControlLabel value=\"playlist\" control={<Radio selected/>} label=\"Playlist\" />\r\n        <FormControlLabel value=\"star\" control={<Radio />} label=\"Star\" />\r\n      </RadioGroup>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        {type==='star'?'':\r\n        <div>\r\n          <InputLabel id=\"demo-simple-select-helper-label1\">Playlist</InputLabel>\r\n          <FormControl className={classes.formstyle}>\r\n            <Select\r\n            id=\"demo-simple-select1\"\r\n            labelId=\"demo-simple-select-helper-label1\"\r\n            value={playlist}\r\n            onChange={handleChangePlaylist}\r\n            inputProps={{ 'aria-label': 'Without label' }}\r\n            >\r\n            <MenuItem value=\"Select Playlist\" disabled>Select Playlist</MenuItem>\r\n            {playlists.map((item, i) => (\r\n              <MenuItem key={i} value={item}>\r\n                {item}\r\n              </MenuItem>\r\n            ))}\r\n            </Select>\r\n          </FormControl>\r\n        </div>\r\n        }\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <InputLabel id=\"demo-simple-select-helper-label2\">Sort Item</InputLabel>\r\n      <FormControl className={classes.formstyle}>\r\n          <Select\r\n          id=\"demo-simple-select2\"\r\n          labelId=\"demo-simple-select-helper-label2\"\r\n          value={item}\r\n          onChange={handleChangeSortItem}\r\n          inputProps={{ 'aria-label': 'Without label' }}\r\n          >\r\n          <MenuItem value='path'>Path</MenuItem>\r\n          <MenuItem value='title'>Title</MenuItem>\r\n          <MenuItem value='album'>Album</MenuItem>\r\n          <MenuItem value='artist'>Artist</MenuItem>\r\n          <MenuItem value='year'>Year</MenuItem>\r\n          </Select>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <FormControl>\r\n          <FormLabel component=\"legend\">Order</FormLabel>\r\n          <RadioGroup row aria-label=\"position\" name=\"position\" defaultValue=\"top\" value={order} onChange={handleChangeOrder}>\r\n              <FormControlLabel value=\"asc\" control={<Radio selected/>} label=\"Asc\" />\r\n              <FormControlLabel value=\"desc\" control={<Radio />} label=\"Desc\" />\r\n          </RadioGroup>\r\n      </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n      <Button variant=\"contained\" className={classes.formstyle} onClick={onClickSortSong}>Sort Start!</Button> \r\n      </Grid>\r\n    </Grid>\r\n    <hr></hr>\r\n    <p style={{textAlign: 'right'}}>\r\n    v0.9.1\r\n    </p>\r\n    </MainCard>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n"],"sourceRoot":""}